//
//  ListPersonViewController.swift
//  VipExample
//
//  Created by Thiago Valente on 26/09/19.
//  Copyright (c) 2019 Thiago Valente. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListPersonDisplayLogic: class {
    func displayFetchedPeople(viewModel: ListPeople.FetchPeople.ViewModel)
}

class ListPersonViewController: UIViewController, ListPersonDisplayLogic {

    //MARK: Property
    var interactor: ListPersonBusinessLogic?
    var router: (ListPersonRoutingLogic & ListPersonDataPassing)?

    var contentView = ListPersonView()

    //MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        setupScene()
        setupView()
        setupContentView()
        fetchPeople()
    }
    
    // MARK: Setup View
    private func setupView() {
        let button = UIBarButtonItem(barButtonSystemItem: .add, target: self, action: Selector("addButtonTapped"))
        navigationItem.rightBarButtonItem = button
    }
    

    // MARK: Setup Scene
    private func setupScene() {
        let viewController = self
        view = contentView
        let interactor = ListPersonInteractor()
        let presenter = ListPersonPresenter()
        let router = ListPersonRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Setup content view
    private func setupContentView() {
        contentView.tableView.delegate = self
        contentView.tableView.dataSource = self
    }

    // MARK: - Fetch orders
    var displayedPeople: [ListPeople.FetchPeople.ViewModel.DisplayedPerson] = []

    func fetchPeople() {
        let request = ListPeople.FetchPeople.Request()
        interactor?.fetchPeople(request: request)
    }

    func displayFetchedPeople(viewModel: ListPeople.FetchPeople.ViewModel) {
        displayedPeople = viewModel.displayedPeople
        contentView.tableView.reloadData()
    }
    
    @objc
    private func addButtonTapped() {
    
    }

}

extension ListPersonViewController: UITableViewDelegate, UITableViewDataSource {

    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return displayedPeople.count
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = UITableViewCell(style: .subtitle, reuseIdentifier: nil)
        cell.textLabel?.text = displayedPeople[indexPath.row].name
        cell.detailTextLabel?.text = displayedPeople[indexPath.row].salary
        return cell
    }

}
